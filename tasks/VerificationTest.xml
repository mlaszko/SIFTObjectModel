<?xml version="1.0" ?><Task>
        <!-- reference task information -->
        <Reference>
                <Author>
                        <name>Michal Laszkowski</name>
                        <link/>
                </Author>

                <Description>
                        <brief>SOM:VerificationTest</brief>
                        <full/>
                </Description>
        </Reference>

        <!-- task definition -->
        <Subtasks>
                <Subtask name="Main">
                        <Executor name="Processing" period="1">
                                <Component bump="0" name="CameraInfo" priority="11" type="CvCoreTypes:CameraInfoProvider">
                                        <param name="camera_matrix">525 0 319.5; 0 525 239.5; 0 0 1</param>
                                        <param name="dist_coeffs">0.18126525 -0.39866885 0.00000000 0.00000000 0.00000000</param>
                                </Component>
                                <Component bump="0" name="SOMJSONReader" priority="12" type="SIFTObjectModel:SOMJSONReader">
                                        <param name="filenames">/home/mlaszkow/DCL/TexturedSolidGeneration/data/lipton_1_1.json</param>
                                </Component>
                                <!--Sequences-->
                                <Component bump="0" name="NextImageTrigger" priority="13" type="CvBasic:Trigger">
                                        <param name="auto_trigger">1</param>
                                </Component>
                                <Component bump="0" name="SequenceRGB" priority="14" type="CvBasic:Sequence">
                                    <param name="sequence.directory">/home/mlaszkow/DCL/Registration/data/2015-05-21/lipton_1_rgbdrainbow_kinect</param>
                                    <param name="sequence.pattern">.*\_rgb\.png</param>
                                    <param name="mode.loop">0</param>
                                    <param name="mode.sort">1</param>
                                    <param name="mode.auto_next_image">0</param>
                                </Component>
                                <Component bump="0" name="SequenceDepth" priority="15" type="CvBasic:Sequence">
                                    <param name="sequence.directory">/home/mlaszkow/DCL/Registration/data/2015-05-21/lipton_1_rgbdrainbow_kinect</param>
                                    <param name="sequence.pattern">.*\_depth\.png</param>
                                    <param name="mode.loop">0</param>
                                    <param name="mode.sort">1</param>
                                    <param name="mode.auto_next_image">0</param>
                                </Component>

                                <!--Processing-->
                                <Component bump="0" name="SIFT" priority="16" type="CvBasic:CvSIFT">
                                </Component>
                                <Component bump="0" name="Converter" priority="17" type="PCL:DepthConverter">
                                </Component>
                                <Component bump="0" name="FeatureCloudConverter" priority="18" type="SIFTObjectModel:FeatureCloudConverter">
                                </Component>


                                <!-- Detect coordinations -->
                                <Component name="DetectCircles" priority="21" type="CvBasic:CvFindCirclesGrid">
                                        <param name="grid.width">3</param>
                                        <param name="grid.height">5</param>
                                        <param name="grid.size">0.06f</param>
                                </Component>
                                <Component name="DetectCirclesInv" priority="22" type="CvBasic:CvFindCirclesGrid">
                                        <param name="grid.width">3</param>
                                        <param name="grid.height">5</param>
                                        <param name="grid.size">0.06f</param>
                                        <param name="image.inverse">1</param>
                                </Component>
                                <Component name="SolvePNP" priority="23" type="CvBasic:CvSolvePnP">
                                        <param name="offset.x">0.075</param>
                                        <param name="offset.y">0.233</param>
                                        <param name="offset.roll">3.14159265359</param>
                                </Component>
                                <Component name="SolvePNPinv" priority="24" type="CvBasic:CvSolvePnP">
                                        <param name="offset.x">0.075</param>
                                        <param name="offset.y">-0.113</param>
                                        <param name="offset.roll">3.14159265359</param>
                                </Component>
                                <Component bump="0" name="SolveLocation" priority="25" type="CvBasic:CalcObjectLocation">
                                </Component>

                                <!-- GroundTruth fix -->

                                <Component name="GroundTruthHMSequence" type="CvCoreTypes:HomogenousMatrixSequence" priority="33" bump="0">
                                        <param name="filename">/home/mlaszkow/DCL/Registration/data/2015-05-21/lipton_1_rgbdrainbow_kinect/ground_truth.yml</param>
                                        <param name="mode.auto_next">0</param>
                                </Component>

                                <Component name="GroundTruthHMMultiplication" type="CvCoreTypes:HomogMatrixMultiplication" priority="34" bump="10">
                                        <param name="inverse_hm2">1</param>
                                </Component>

                                <!-- Recognition -->
                                <Component name="CorrespondenceEstimation" type="Registration:CorrespondenceEstimation" priority="41" bump="0">
                                    <param name="rejection.use">0</param>
                                    <param name="rejection.max_distance">0.01</param>
                                </Component>

                                <Component bump="10" name="CorrespondenceGrouping" priority="42" type="SORecognition:CorrespondenceGrouping">
                                    <param name="cluster_grouping.size">0.005f</param>
                                    <param name="cluster_grouping.threshold">6.0f</param>
                                </Component>


                                <Component name="ReprojectionError" priority="44" type="SIFTObjectModel:ReprojectionError" bump="10">
                                </Component>


                                <!-- Verification -->
                                <Component  name="Projection" priority="51" type="SIFTObjectModel:Projection" bump="1">
                                        <param name="use_icp">0</param>
                                </Component>

                                <Component name="GreedyVerification" priority="53" type="SIFTObjectModel:GreedyVerification" bump="1">
                                        <param name="resolution">0.005f</param>
                                        <param name="inlier_treshold">0.005f</param>
                                </Component>
                                <Component name="ConflictGraph" priority="54" type="SIFTObjectModel:ConflictGraph" bump="1">
                                        <param name="resolution">0.005f</param>
                                        <param name="inlier_treshold">0.005f</param>
                                        <param name="support_threshold">0.08f</param>
                                        <param name="penalty_threshold">0.05f</param>
                                        <param name="conflict_threshold">0.02f</param>
                                </Component>
                                <Component name="GlobalHypothesesVerification" priority="55" type="SIFTObjectModel:GlobalHypothesesVerification" bump="1">
                                        <param name="resolution">0.005f</param>
                                        <param name="inlier_treshold">0.005f</param>
                                        <param name="radius_clutter">0.04f</param>
                                        <param name="regularizer">3.f</param>
                                        <param name="clutter_regularizer">5.f</param>
                                </Component>
                        </Executor>



            </Subtask>

        </Subtasks>

        <!-- pipes connecting datastreams -->
        <DataStreams>
                <Source name="CameraInfo.out_camera_info">
                        <sink>SolvePNP.in_camera_info</sink>
                        <sink>SolvePNPinv.in_camera_info</sink>
                        <sink>Converter.in_camera_info</sink>
                        <sink>FeatureCloudConverter.in_camera_info</sink>
                </Source>
                <!--Sequences-->
                <Source name="NextImageTrigger.out_trigger">
                        <sink>SequenceRGB.in_next_image_trigger</sink>
                        <sink>SequenceDepth.in_next_image_trigger</sink>
                        <sink>GroundTruthHMSequence.in_next_trigger</sink>
                </Source>
                <Source name="SequenceRGB.out_img">
                        <sink>SIFT.in_img</sink>
                        <sink>Converter.in_color</sink>
                        <sink>DetectCircles.in_img</sink>
                        <sink>DetectCirclesInv.in_img</sink>
                </Source>
                <Source name="SequenceDepth.out_img">
                        <sink>Converter.in_depth</sink> <!--_xyz-->
                        <sink>FeatureCloudConverter.in_depth</sink>
                </Source>
                <!--Proccesing-->
                <Source name="SIFT.out_descriptors">
                        <sink>FeatureCloudConverter.in_descriptors</sink>
                </Source>
                <Source name="SIFT.out_features">
                        <sink>FeatureCloudConverter.in_features</sink>
                </Source>
                <Source name="Converter.out_cloud_xyzrgb">
                        <sink>CorrespondenceGrouping.in_cloud_xyzrgb</sink>
                        <sink>Projection.in_cloud_xyzrgb_scene</sink>
                </Source>
                <Source name="FeatureCloudConverter.out_cloud_xyzsift">
                        <sink>CorrespondenceEstimation.in_scene_cloud_xyzsift</sink>
                        <sink>CorrespondenceGrouping.in_cloud_xyzsift</sink>
                </Source>

                <!--Read model-->
                <Source name="SOMJSONReader.out_model_clouds_xyzrgb">
                        <sink>CorrespondenceGrouping.in_model_clouds_xyzrgb</sink>
                </Source>
                <Source name="SOMJSONReader.out_model_clouds_xyzsift">
                        <sink>CorrespondenceEstimation.in_model_clouds_xyzsift</sink>
                        <sink>CorrespondenceGrouping.in_model_clouds_xyzsift</sink>
                </Source>
                <Source name="SOMJSONReader.out_model_corners_xyz">
                        <sink>CorrespondenceGrouping.in_model_corners_xyz</sink>
                </Source>
                <Source name="SOMJSONReader.out_model_labels">
                        <sink>CorrespondenceGrouping.in_model_labels</sink>
                </Source>

                <!-- Detect coordinations -->
                <Source name="DetectCircles.out_pattern">
                        <sink>SolvePNP.in_object3d</sink>
                </Source>
                <Source name="DetectCirclesInv.out_pattern">
                        <sink>SolvePNPinv.in_object3d</sink>
                </Source>
                <Source name="SolvePNPinv.out_homogMatrix">
                        <sink>SolveLocation.in_homogMatrix</sink>
                </Source>
                <Source name="SolvePNP.out_homogMatrix">
                        <sink>SolveLocation.in_homogMatrix</sink>
                </Source>

                <Source name="SolveLocation.out_homogMatrix">
                        <sink>GroundTruthHMMultiplication.in_hm1</sink>
                </Source>

                <Source name="GroundTruthHMSequence.out_homogMatrix">
                        <sink>GroundTruthHMMultiplication.in_hm2</sink>
                </Source>

                <Source name="GroundTruthHMMultiplication.out_hm">
                        <sink>ReprojectionError.in_location_hm</sink>
                </Source>

                <!-- Recognition -->
                <Source name="CorrespondenceEstimation.out_models_scene_correspondences">
                        <sink>CorrespondenceGrouping.in_models_scene_correspondences</sink>
                </Source>

                <Source name="CorrespondenceGrouping.out_cluster_clouds_xyzrgb">
                        <sink>Projection.in_model_clouds_xyzrgb</sink>
                </Source>


                <Source name="CorrespondenceGrouping.out_cluster_poses">
                        <sink>Projection.in_poses</sink>
                        <sink>ReprojectionError.in_rototranslations</sink>
                </Source>





                <!-- Projection -->
                <Source name="Projection.out_registered_instances_xyzrgb">
                        <sink>GreedyVerification.in_aligned_hypotheses_xyzrgb</sink>
                        <sink>ConflictGraph.in_aligned_hypotheses_xyzrgb</sink>
                        <sink>GlobalHypothesesVerification.in_aligned_hypotheses_xyzrgb</sink>
                </Source>


                <Source name="Projection.out_parts_of_scene_xyzrgb">
                        <sink>GreedyVerification.in_cloud_xyzrgb_scene</sink>
                        <sink>ConflictGraph.in_cloud_xyzrgb_scene</sink>
                        <sink>GlobalHypothesesVerification.in_cloud_xyzrgb_scene</sink>
                </Source>



        </DataStreams>
</Task>
