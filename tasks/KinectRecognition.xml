<?xml version="1.0" ?><Task>
        <!-- reference task information -->
        <Reference>
                <Author>
                        <name>Michal Laszkowski</name>
                        <link/>
                </Author>

                <Description>
                        <brief>SOM:KinectRecognition</brief>
                        <full>Using Kinect to recognise objects</full>
                </Description>
        </Reference>

        <!-- task definition -->
        <Subtasks>
                <Subtask name="Main">
                        <Executor name="Processing" period="1">
                                <Component bump="0" name="CameraInfo" priority="11" type="CvCoreTypes:CameraInfoProvider">
                                        <param name="camera_matrix">525 0 319.5; 0 525 239.5; 0 0 1</param>
                                        <param name="dist_coeffs">0.18126525 -0.39866885 0.00000000 0.00000000 0.00000000</param>
                                </Component>
                                <Component bump="0" name="SOMJSONReader" priority="12" type="SIFTObjectModel:SOMJSONReader">
                                        <param name="filenames">/home/mlaszkow/DCL/TexturedSolidGeneration/data/lipton_2_1.json</param>
                                </Component>
                                <!--Kinect-->
                                <Component name="Kinect" type="CameraNUI:CameraNUI" priority="13" bump="0">
                                        <param name="sync">1</param>
                                </Component>

                                <!--Processing-->
                                <Component bump="0" name="SIFT" priority="16" type="CvBasic:CvSIFT">
                                </Component>
                                <Component bump="0" name="Converter" priority="17" type="PCL:DepthConverter">
                                </Component>
                                <Component bump="0" name="FeatureCloudConverter" priority="18" type="SIFTObjectModel:FeatureCloudConverter">
                                </Component>


                                <!-- Recognition -->
                                <Component name="CorrespondenceEstimation" type="Registration:CorrespondenceEstimation" priority="41" bump="0">
                                    <param name="rejection.use">0</param>
                                    <param name="rejection.max_distance">0.01</param>
                                </Component>

                                <Component bump="0" name="CorrespondenceGrouping" priority="42" type="SORecognition:CorrespondenceGrouping">
                                    <param name="cluster_grouping.size">0.005f</param>
                                    <param name="cluster_grouping.threshold">6.0f</param>
                                </Component>
                                <Component name="ClusterCornersTransformer" priority="43" type="PCL:CloudTransformer">
                                        <param name="inverse">0</param>
                                </Component>

                                <!-- Verification -->
                                <Component  name="Projection" priority="51" type="SIFTObjectModel:Projection" bump="0">
                                        <param name="use_icp">0</param>
                                </Component>
                                <Component bump="0" name="ProjectionSIFT" priority="52" type="SIFTObjectModel:Projection">
                                        <param name="use_icp">0</param>
                                </Component>
                                <Component name="GreedyVerification" priority="53" type="SIFTObjectModel:GreedyVerification" bump="9">
                                        <param name="resolution">0.005f</param>
                                        <param name="inlier_treshold">0.005f</param>
                                        <param name="lambda">0.5f</param>
                                </Component>
                                <Component name="ConflictGraph" priority="54" type="SIFTObjectModel:ConflictGraph" bump="0">
                                        <param name="resolution">0.005f</param>
                                        <param name="inlier_treshold">0.005f</param>
                                        <param name="support_threshold">0.08f</param>
                                        <param name="penalty_threshold">0.06f</param>
                                        <param name="conflict_threshold">0.02f</param>
                                </Component>
                                <Component name="GlobalHypothesesVerification" priority="55" type="SIFTObjectModel:GlobalHypothesesVerification" bump="10">
                                        <param name="resolution">0.005f</param>
                                        <param name="inlier_treshold">0.005f</param>
                                        <param name="radius_clutter">0.01f</param>
                                        <param name="regularizer">1.f</param>
                                        <param name="clutter_regularizer">1.f</param>
                                </Component>
                        </Executor>

                        <Executor name="Visualization" period="1">
                                <Component name="CloudViewer" type="PCL:CloudViewer" priority="101" bump="0">
                                        <param name="coordinate_system_scale">0.01</param>
                                </Component>
                        </Executor>

            </Subtask>

        </Subtasks>

        <!-- pipes connecting datastreams -->
        <DataStreams>
                <Source name="CameraInfo.out_camera_info">
                        <sink>Converter.in_camera_info</sink>
                        <sink>FeatureCloudConverter.in_camera_info</sink>
                </Source>
                <!--Sequences-->
                <Source name="Kinect.out_img">
                        <sink>SIFT.in_img</sink>
                        <sink>Converter.in_color</sink>
                </Source>
                <Source name="Kinect.out_depth">
                        <sink>Converter.in_depth</sink> <!--_xyz-->
                        <sink>FeatureCloudConverter.in_depth</sink>
                </Source>
                <!--Proccesing-->
                <Source name="SIFT.out_descriptors">
                        <sink>FeatureCloudConverter.in_descriptors</sink>
                </Source>
                <Source name="SIFT.out_features">
                        <sink>FeatureCloudConverter.in_features</sink>
                </Source>
                <Source name="Converter.out_cloud_xyzrgb">
                        <sink>CorrespondenceGrouping.in_cloud_xyzrgb</sink>
                        <sink>Projection.in_cloud_xyzrgb_scene</sink>
                        <sink>CloudViewer.in_scene_cloud_xyzrgb</sink>
                </Source>
                <Source name="FeatureCloudConverter.out_cloud_xyzsift">
                        <sink>CorrespondenceEstimation.in_scene_cloud_xyzsift</sink>
                        <sink>CorrespondenceGrouping.in_cloud_xyzsift</sink>
                        <sink>ProjectionSIFT.in_cloud_xyzsift_scene</sink>
                        <sink>CloudViewer.in_scene_cloud_xyzsift</sink>
                </Source>

                <!--Read model-->
                <Source name="SOMJSONReader.out_model_clouds_xyzrgb">
                        <sink>CorrespondenceGrouping.in_model_clouds_xyzrgb</sink>
                </Source>
                <Source name="SOMJSONReader.out_model_clouds_xyzsift">
                        <sink>CorrespondenceEstimation.in_model_clouds_xyzsift</sink>
                        <sink>CorrespondenceGrouping.in_model_clouds_xyzsift</sink>
                </Source>
                <Source name="SOMJSONReader.out_model_corners_xyz">
                        <sink>CorrespondenceGrouping.in_model_corners_xyz</sink>
                </Source>
                <Source name="SOMJSONReader.out_model_labels">
                        <sink>CorrespondenceGrouping.in_model_labels</sink>
                </Source>


                <!-- Recognition -->
                <Source name="CorrespondenceEstimation.out_models_scene_correspondences">
                        <sink>CorrespondenceGrouping.in_models_scene_correspondences</sink>
                </Source>

                <Source name="CorrespondenceGrouping.out_cluster_clouds_xyzrgb">
                        <sink>Projection.in_model_clouds_xyzrgb</sink>
                </Source>

                <Source name="CorrespondenceGrouping.out_cluster_clouds_xyzsift">
                        <sink>ProjectionSIFT.in_model_clouds_xyzsift</sink>
                </Source>

                <Source name="CorrespondenceGrouping.out_cluster_poses">
                        <sink>Projection.in_poses</sink>
                        <sink>ProjectionSIFT.in_poses</sink>
                        <sink>ClusterCornersTransformer.in_hms</sink>
                        <sink>CloudViewer.in_object_poses</sink>
                </Source>

                <Source name="CorrespondenceGrouping.out_clusters_scene_correspondences">
                        <sink>CloudViewer.in_objects_scene_correspondences</sink>
                </Source>

                <Source name="CorrespondenceGrouping.out_cluster_labels">
                        <sink>CloudViewer.in_object_labels</sink>
                </Source>

                <Source name="CorrespondenceGrouping.out_cluster_corners_xyz">
                        <sink>ClusterCornersTransformer.in_clouds_xyz</sink>
                </Source>

                <Source name="ClusterCornersTransformer.out_clouds_xyz">
                        <sink>CloudViewer.in_object_corners_xyz</sink>
                </Source>


                <!-- Projection -->
                <Source name="Projection.out_registered_instances_xyzrgb">
                        <sink>GreedyVerification.in_aligned_hypotheses_xyzrgb</sink>
                        <sink>ConflictGraph.in_aligned_hypotheses_xyzrgb</sink>
                        <sink>GlobalHypothesesVerification.in_aligned_hypotheses_xyzrgb</sink>
                        <sink>CloudViewer.in_object_clouds_xyzrgb</sink>
                </Source>

                <Source name="ProjectionSIFT.out_registered_instances_xyzsift">
                        <sink>CloudViewer.in_object_clouds_xyzsift</sink>
                </Source>

                <Source name="Projection.out_parts_of_scene_xyzrgb">
                        <sink>GreedyVerification.in_cloud_xyzrgb_scene</sink>
                        <sink>ConflictGraph.in_cloud_xyzrgb_scene</sink>
                        <sink>GlobalHypothesesVerification.in_cloud_xyzrgb_scene</sink>
                </Source>

                <!-- Verification -->
<!--                <Source name="GreedyVerification.out_verified_hypotheses_xyzrgb">
                        <sink>CloudViewer.in_object_clouds_xyzrgb</sink>
                </Source>-->


        </DataStreams>
</Task>
